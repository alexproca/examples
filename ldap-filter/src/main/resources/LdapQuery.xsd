<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio Developer Edition 9.0.11.3078 (http://www.liquid-technologies.com)-->
<xsd:schema xmlns="http://directory.apache.org//LdapQuery" elementFormDefault="unqualified" targetNamespace="http://directory.apache.org//LdapQuery" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:element name="LdapQuery">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Filter" type="Filter" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="Filter">
        <xsd:choice>
            <xsd:element name="and" type="Filter" maxOccurs="unbounded" />
            <xsd:element name="or" type="Filter" maxOccurs="unbounded" />
            <xsd:element name="not" type="Filter" />
            <xsd:element name="equalityMatch" type="AttributeValueAssertion" />
            <xsd:element name="substrings" type="SubstringFilter" />
            <xsd:element name="greaterOrEqual" type="AttributeValueAssertion" />
            <xsd:element name="lessOrEqual" type="AttributeValueAssertion" />
            <xsd:element name="present" type="xsd:string" />
            <xsd:element name="approxMatch" type="AttributeValueAssertion" />
            <xsd:element name="extensibleMatch" type="MatchingRuleAssertion" />
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="AttributeValueAssertion">
        <xsd:sequence>
            <xsd:element name="attributeDesc" type="xsd:string" />
            <xsd:element name="assertionValue" type="xsd:string" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="MatchingRuleAssertion">
        <xsd:sequence>
            <xsd:element name="matchingRule" type="xsd:string" minOccurs="0" />
            <xsd:element name="type" type="xsd:string" minOccurs="0" />
            <xsd:element name="matchValue" type="xsd:string" />
            <xsd:element name="dnAttributes" type="xsd:boolean" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="SubstringFilter">
        <xsd:sequence>
            <xsd:element name="type" type="xsd:string" />
            <xsd:element name="substrings">
                <xsd:complexType>
                    <xsd:choice minOccurs="1" maxOccurs="unbounded">
                        <xsd:element name="initial" type="xsd:string" />
                        <xsd:element name="any" type="xsd:string" />
                        <xsd:element name="final" type="xsd:string" />
                    </xsd:choice>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>
